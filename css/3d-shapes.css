/* 3D Shapes for Evolution System */

/* Common 3D Settings */
.form-3d {
  transform-style: preserve-3d;
  perspective: 800px;
  transition: transform 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Cube Shape */
.form-cube {
  transform-style: preserve-3d;
  perspective: 800px;
  animation: cube-rotate 15s infinite linear;
}

.form-cube::before,
.form-cube::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: inherit;
  opacity: 0.9;
  border-radius: inherit;
}

.form-cube::before {
  transform: rotateY(90deg) translateZ(calc(var(--pixel-base-size) / 2));
}

.form-cube::after {
  transform: rotateX(90deg) translateZ(calc(var(--pixel-base-size) / 2));
}

/* Pyramid Shape */
.form-pyramid {
  transform-style: preserve-3d;
  perspective: 800px;
  animation: pyramid-rotate 12s infinite linear;
}

.form-pyramid::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: inherit;
  transform: rotateX(45deg) translateZ(calc(var(--pixel-base-size) / 2));
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}

/* Sphere Shape */
.form-sphere {
  border-radius: 50% !important;
  background: radial-gradient(circle at 30% 30%, 
              var(--primary-color) 0%, 
              color-mix(in srgb, var(--primary-color), black 40%) 80%) !important;
  box-shadow: inset -5px -5px 15px rgba(0,0,0,0.4), 
              inset 5px 5px 15px rgba(255,255,255,0.2),
              0 0 var(--aura-size) calc(var(--aura-size) / 2) var(--aura-color) !important;
  animation: sphere-pulse 8s infinite alternate;
}

/* Crystal Shape */
.form-crystal {
  transform-style: preserve-3d;
  perspective: 800px;
  clip-path: polygon(50% 0%, 100% 40%, 100% 60%, 50% 100%, 0% 60%, 0% 40%);
  background: linear-gradient(135deg, 
              rgba(255,255,255,0.4) 0%, 
              rgba(255,255,255,0.1) 50%, 
              rgba(255,255,255,0.4) 100%) !important;
  animation: crystal-shine 10s infinite alternate;
}

.form-crystal::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: inherit;
  opacity: 0.7;
  transform: translateZ(calc(var(--pixel-base-size) / -2));
  clip-path: polygon(50% 0%, 100% 40%, 100% 60%, 50% 100%, 0% 60%, 0% 40%);
}

/* Toroid (Donut) Shape */
.form-toroid {
  border-radius: 50%;
  box-shadow: inset 0 0 0 calc(var(--pixel-base-size) / 3) var(--primary-color),
              0 0 var(--aura-size) calc(var(--aura-size) / 2) var(--aura-color) !important;
  background-color: transparent !important;
  animation: toroid-rotate 12s infinite linear;
}

/* Animations for 3D shapes */
@keyframes cube-rotate {
  0% { transform: rotateX(0) rotateY(0) rotateZ(0); }
  25% { transform: rotateX(90deg) rotateY(120deg) rotateZ(40deg); }
  50% { transform: rotateX(180deg) rotateY(180deg) rotateZ(90deg); }
  75% { transform: rotateX(270deg) rotateY(240deg) rotateZ(40deg); }
  100% { transform: rotateX(360deg) rotateY(360deg) rotateZ(0); }
}

@keyframes pyramid-rotate {
  0% { transform: rotateX(0) rotateY(0); }
  100% { transform: rotateX(360deg) rotateY(360deg); }
}

@keyframes sphere-pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

@keyframes crystal-shine {
  0% { filter: hue-rotate(0deg) brightness(1); }
  50% { filter: hue-rotate(180deg) brightness(1.3); }
  100% { filter: hue-rotate(360deg) brightness(1); }
}

@keyframes toroid-rotate {
  0% { transform: rotateX(60deg) rotateZ(0); }
  100% { transform: rotateX(60deg) rotateZ(360deg); }
}

/* Dimensional shifting effect for higher evolution levels */
.form-transcendent-3d {
  animation: transcendent-morph 15s infinite alternate;
  filter: saturate(1.5) contrast(1.2);
  box-shadow: 0 0 30px 15px var(--aura-color) !important;
}

@keyframes transcendent-morph {
  0% { transform: rotateX(0deg) rotateY(0deg) scale(1); border-radius: 50%; }
  25% { transform: rotateX(180deg) rotateY(90deg) scale(1.1); border-radius: 5%; }
  50% { transform: rotateX(270deg) rotateY(180deg) scale(1); clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%); }
  75% { transform: rotateX(90deg) rotateY(270deg) scale(1.1); border-radius: 40%; }
  100% { transform: rotateX(360deg) rotateY(360deg) scale(1); border-radius: 50%; }
}
