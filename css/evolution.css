/* Evolution System Styles - Streamlined version */

/* Evolution Indicator */
.evolution-indicator {
  position: fixed;
  top: 10px;
  right: 10px;
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 20px;
  padding: 10px 15px;
  color: white;
  font-family: var(--font-family);
  font-size: 14px;
  z-index: 1000;
  transition: opacity 0.3s;
  box-shadow: 0 0 10px rgba(255, 105, 180, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.3);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  opacity: 0;
  display: none;
}

/* Evolution Level Display */
.evolution-level {
  font-weight: bold;
  margin-bottom: 5px;
  text-align: center;
}

/* Evolution Progress Bar Container */
.evolution-progress-container {
  width: 100px;
  height: 6px;
  background-color: rgba(255, 255, 255, 0.3);
  border-radius: 3px;
  overflow: hidden;
  position: relative;
}

/* Evolution Progress Bar */
.evolution-progress-bar {
  height: 100%;
  background: linear-gradient(90deg, #ff6ef0 0%, #50c8ff 100%);
  width: 0%;
  transition: width 0.3s;
  border-radius: 3px;
}

/* Evolution Message */
#evolution-message {
  position: fixed;
  bottom: 50px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 12px 20px;
  border-radius: 20px;
  font-family: var(--font-family);
  font-size: 16px;
  text-align: center;
  z-index: 9999;
  opacity: 0;
  transition: opacity 0.3s;
  pointer-events: none;
  max-width: 80%;
}

/* Pixel Copy Styles */
.pixel-copy {
  position: fixed;
  pointer-events: none;
  z-index: 9990;
}

/* Evolution Effect Styles */
.evolution-effect {
  position: fixed;
  pointer-events: none;
  z-index: 9998;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(170,242,255,0) 70%);
}

/* Teleport Effect */
.teleport-effect {
  position: fixed;
  pointer-events: none;
  z-index: 9995;
}

/* Teleporting state */
.teleporting {
  opacity: 0 !important;
  transition: opacity 0.2s ease-out !important;
}

/* Evolution transition */
.evolving {
  opacity: 0.5;
  transform: scale(1.2) rotate(15deg) translateZ(0) !important;
  transition: all 1s cubic-bezier(0.34, 1.56, 0.64, 1) !important;
}

/* Evolution completion effects */
.evolution-complete-1, .evolution-complete-2, .evolution-complete-3,
.evolution-complete-4, .evolution-complete-5 {
  filter: brightness(1.5) !important;
  transition: filter 0.5s ease-out !important;
}

/* Evolved Pixel Styles - Level 1 */
.evolution-level-1 {
  border-radius: 2px !important;
  box-shadow: 0 0 8px rgba(255, 255, 255, 0.7) !important;
}

/* Evolved Pixel Styles - Level 2 */
.evolution-level-2 {
  border-radius: 50% !important;
  box-shadow: 0 0 12px rgba(170, 242, 255, 0.8) !important;
}

/* Evolved Pixel Styles - Level 3 */
.evolution-level-3 {
  border-radius: 50% !important;
  box-shadow: 0 0 15px rgba(170, 242, 255, 0.9) !important;
  animation: evolvedPixelPulse 3s infinite alternate !important;
}

/* Evolved Pixel Styles - Level 4 */
.evolution-level-4 {
  border-radius: 50% !important;
  box-shadow: 0 0 18px rgba(255, 202, 58, 0.9) !important;
  animation: evolvedPixelAura 5s infinite alternate !important;
}

/* Evolved Pixel Styles - Level 5 (Max) */
.evolution-level-5 {
  border-radius: 50% !important;
  box-shadow: 0 0 25px rgba(255, 255, 255, 0.9) !important;
  animation: dimensionalShift 10s infinite !important;
}

/* Special Animation for evolved forms */
@keyframes evolvedPixelPulse {
  0% { transform: scale(1); filter: brightness(1); }
  50% { transform: scale(1.1) rotate(5deg); filter: brightness(1.2); }
  100% { transform: scale(1) rotate(0deg); filter: brightness(1); }
}

@keyframes evolvedPixelAura {
  0% { box-shadow: 0 0 10px 5px rgba(255, 255, 255, 0.7); }
  50% { box-shadow: 0 0 20px 10px rgba(170, 242, 255, 0.9); }
  100% { box-shadow: 0 0 10px 5px rgba(255, 255, 255, 0.7); }
}

/* Optimized dimensional shift animation with GPU acceleration */
@keyframes dimensionalShift {
  0% { 
    transform: perspective(100px) rotateY(0deg) scale(1) translateZ(0); 
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.8); 
    filter: hue-rotate(0deg);
  }
  25% { 
    transform: perspective(100px) rotateY(90deg) scale(1.1) translateZ(0); 
    box-shadow: 0 0 20px rgba(255, 105, 180, 0.9); 
    filter: hue-rotate(90deg);
  }
  50% { 
    transform: perspective(100px) rotateY(180deg) scale(1.2) translateZ(0); 
    box-shadow: 0 0 25px rgba(170, 242, 255, 1); 
    filter: hue-rotate(180deg);
  }
  75% { 
    transform: perspective(100px) rotateY(270deg) scale(1.1) translateZ(0); 
    box-shadow: 0 0 20px rgba(255, 223, 0, 0.9); 
    filter: hue-rotate(270deg);
  }
  100% { 
    transform: perspective(100px) rotateY(360deg) scale(1) translateZ(0); 
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.8); 
    filter: hue-rotate(360deg);
  }
}

/* Add a global dimension shift effect */
.dimension-shift {
  animation: dimensionShiftBackground 3s ease-in-out;
}

@keyframes dimensionShiftBackground {
  0% { filter: hue-rotate(0deg) brightness(1); }
  50% { filter: hue-rotate(180deg) brightness(1.2); }
  100% { filter: hue-rotate(360deg) brightness(1); }
}

@keyframes teleportOut {
  0% { transform: translate(-50%, -50%) scale(0.1); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(2); opacity: 0; }
}

@keyframes teleportIn {
  0% { transform: translate(-50%, -50%) scale(2); opacity: 0; }
  100% { transform: translate(-50%, -50%) scale(0.1); opacity: 1; }
}

@keyframes evolutionBurst {
  0% { transform: translate(-50%, -50%) scale(0.2); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(4); opacity: 0; }
}

/* GPU-accelerated pixel copy animation */
@keyframes pixelCopyLife {
  0% { 
    opacity: 0.3; 
    transform: scale(0.5) translateZ(0);
    filter: brightness(0.8);
  }
  10% { 
    opacity: 0.7; 
    transform: scale(1) translateZ(0);
    filter: brightness(1.2);
  }
  80% { 
    opacity: 0.7; 
    transform: scale(1) translateZ(0);
    filter: brightness(1);
  }
  100% { 
    opacity: 0; 
    transform: scale(1.5) translateZ(0);
    filter: brightness(0.5);
  }
}

/* Optimized pixel copy with CSS animation */
.pixel-copy {
  position: fixed;
  pointer-events: none;
  z-index: 9990;
  will-change: transform, opacity;
  animation: pixelCopyLife 4s forwards;
}

/* Add additional styles for elements created in JavaScript */
.evolution-message {
  position: fixed;
  bottom: 50px;
  left: 50%;
  transform: translateX(-50%) translateZ(0); /* GPU acceleration */
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 12px 20px;
  border-radius: 20px;
  font-family: var(--font-family);
  font-size: 16px;
  text-align: center;
  z-index: 9999;
  opacity: 0;
  transition: opacity 0.3s;
  pointer-events: none;
  max-width: 80%;
}

.evolution-message.evolution-event {
  background-color: rgba(255, 105, 180, 0.9);
  box-shadow: 0 0 20px rgba(255, 105, 180, 0.7);
  font-size: 18px;
}

.evolution-effect {
  position: fixed;
  width: 100px;
  height: 100px;
  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(170,242,255,0) 70%);
  border-radius: 50%;
  pointer-events: none;
  z-index: 9998;
  transform: translate(-50%, -50%);
  animation: evolutionBurst 1.5s ease-out forwards;
}

.teleport-effect {
  position: fixed;
  width: 50px;
  height: 50px;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  pointer-events: none;
  z-index: 9995;
  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(128,0,255,0) 70%);
}

.teleport-effect.teleport-out {
  animation: teleportOut 0.6s forwards;
}

.teleport-effect.teleport-in {
  animation: teleportIn 0.6s forwards;
}

.pixel-copy {
  position: fixed;
  pointer-events: none;
  z-index: 9990;
  opacity: 0.7;
  animation: pixelCopyLife 4s forwards;
}
