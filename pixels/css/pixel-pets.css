/* Pixel Pets Game Styles */

/* Simple zoom prevention that preserves background */
html {
  touch-action: manipulation;
}

body {
  touch-action: manipulation;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Prevent zoom on inputs and buttons */
input, button, select, textarea {
  font-size: 16px !important;
}

/* Canvas-specific zoom prevention */
#three-canvas {
  touch-action: none;
}

.header-section {
  position: fixed;
  top: 2rem;
  left: 2rem;
  z-index: 2000;
}

.title {
  color: black;
  text-shadow: 10px 9px 8px #57CBF8;
  font-family: 'Boogie Blocks';
  font-style: normal;
  font-weight: bold;
  font-size: 36px;
  line-height: 105%;
  margin: 0;
  transition: text-shadow 0.8s ease-in-out;
  text-align: left;
}

.subtitle {
  font-family: var(--font-family);
  font-size: 0.9rem;
  color: white;
  background-color: black;
  text-align: left;
  margin: 0.5rem 0 0 0;
  text-shadow: 1px 1px 2px var(--text-shadow-color);
  padding: 0.225rem 0.45rem;
  border-radius: 4px;
}

/* Data display in bottom left - Glass morphism effect */
.data-display {
  position: fixed !important;
  bottom: 2rem !important;
  left: 2rem !important;
  z-index: 2000 !important;
  /* Glass morphism background */
  background: rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  /* Glass border and shadow */
  border: 1px solid rgba(255, 255, 255, 0.15);
  border-radius: 12px;
  /* Glass shadow effects */
  box-shadow: 
    0 6px 24px rgba(0, 0, 0, 0.12),
    inset 0 1px 0 rgba(255, 255, 255, 0.15),
    inset 0 -1px 0 rgba(0, 0, 0, 0.05);
  /* Content styling */
  color: rgba(0, 0, 0, 0.8);
  padding: 1rem;
  font-family: var(--font-family);
  font-size: 0.9rem;
  line-height: 1.4;
  max-width: 280px;
  min-width: 220px;
  /* Smooth transitions */
  transition: all 0.3s ease;
  /* Subtle inner glow */
  position: relative;
}
}

/* Glass highlight effect on top edge */
.data-display::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.3) 50%, 
    transparent);
  border-radius: 12px 12px 0 0;
}

/* Hover effect for glass interaction */
.data-display:hover {
  background: rgba(255, 255, 255, 0.12);
  border-color: rgba(255, 255, 255, 0.25);
  box-shadow: 
    0 12px 40px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.2),
    inset 0 -1px 0 rgba(0, 0, 0, 0.05);
  transform: translateY(-2px);
}

.data-title {
  font-weight: bold;
  margin-bottom: 0.6rem;
  color: rgba(0, 0, 0, 0.85);
  text-shadow: 0 1px 2px rgba(255, 255, 255, 0.3);
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  padding-bottom: 0.4rem;
  font-size: 0.95rem;
  letter-spacing: 0.3px;
}

#cube-info {
  font-family: monospace;
  font-size: 0.8rem;
  color: rgba(0, 0, 0, 0.75);
  line-height: 1.5;
  text-shadow: 0 1px 2px rgba(255, 255, 255, 0.2);
}

#cube-info div {
  margin-bottom: 0.25rem;
}

#cube-info strong {
  color: rgba(0, 0, 0, 0.85);
  font-weight: 600;
}

.reset-btn {
  background: var(--gradient-top);
  color: black;
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 4px;
  padding: 0.4rem 0.8rem;
  font-size: 0.8rem;
  font-weight: 600;
  cursor: pointer;
  margin-top: 0.8rem;
  transition: background 0.3s ease;
  font-family: var(--font-family);
}

.reset-btn:hover {
  background: white;
  border-color: rgba(255, 255, 255, 0.5);
}

.reset-btn:active {
  background: var(--gradient-bottom);
  opacity: 0.8;
}

/* Remove wrapper styling since canvas is now fullscreen */

/* Game area styling will be added in next steps */
.game-area {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 15px;
  padding: 2rem;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

/* Canvas styling - fullscreen with no overlays */
#three-canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1;
  border: none;
  background: none;
  margin: 0;
  padding: 0;
  pointer-events: auto;
  /* Subtle glow effect around the canvas */
  box-shadow: inset 0 0 100px rgba(255, 255, 255, 0.05);
  transition: box-shadow 0.3s ease;
}

/* Dynamic lighting states */
#three-canvas.excited-lighting {
  box-shadow: inset 0 0 120px rgba(255, 255, 0, 0.1),
              inset 0 0 200px rgba(255, 20, 147, 0.08);
}

#three-canvas.happy-lighting {
  box-shadow: inset 0 0 100px rgba(0, 255, 136, 0.08),
              inset 0 0 160px rgba(255, 255, 255, 0.06);
}

#three-canvas.curious-lighting {
  box-shadow: inset 0 0 100px rgba(255, 170, 0, 0.07),
              inset 0 0 150px rgba(255, 255, 255, 0.05);
}

/* Subtle ambient glow that reacts to cube state */
.ambient-glow {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 300px;
  height: 300px;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.03) 0%, transparent 70%);
  pointer-events: none;
  z-index: 0;
  transition: all 0.5s ease;
  opacity: 0.5;
  animation: ambient-pulse 4s ease-in-out infinite alternate;
}

@keyframes ambient-pulse {
  0% { transform: translate(-50%, -50%) scale(0.95); opacity: 0.4; }
  100% { transform: translate(-50%, -50%) scale(1.05); opacity: 0.6; }
}

.ambient-glow.excited {
  background: radial-gradient(circle, rgba(255, 255, 0, 0.06) 0%, rgba(255, 20, 147, 0.03) 50%, transparent 70%);
  animation: excited-pulse 1.5s ease-in-out infinite alternate;
}

.ambient-glow.happy {
  background: radial-gradient(circle, rgba(0, 255, 136, 0.05) 0%, rgba(255, 255, 255, 0.02) 50%, transparent 70%);
  animation: happy-pulse 2.5s ease-in-out infinite alternate;
}

.ambient-glow.curious {
  background: radial-gradient(circle, rgba(255, 170, 0, 0.04) 0%, rgba(255, 255, 255, 0.02) 50%, transparent 70%);
  animation: curious-pulse 3s ease-in-out infinite alternate;
}

@keyframes excited-pulse {
  0% { transform: translate(-50%, -50%) scale(1.0); opacity: 0.6; }
  100% { transform: translate(-50%, -50%) scale(1.3); opacity: 0.8; }
}

@keyframes happy-pulse {
  0% { transform: translate(-50%, -50%) scale(1.0); opacity: 0.5; }
  100% { transform: translate(-50%, -50%) scale(1.2); opacity: 0.7; }
}

@keyframes curious-pulse {
  0% { transform: translate(-50%, -50%) scale(1.0); opacity: 0.4; }
  100% { transform: translate(-50%, -50%) scale(1.1); opacity: 0.6; }
}

/* Mobile-specific optimizations */
@media (max-width: 768px) {
  .header-section {
    top: 1rem;
    left: 1rem;
  }
  
  .title {
    font-size: 28px;
  }
  
  .subtitle {
    font-size: 0.8rem;
  }
  
  .data-display {
    bottom: 1rem;
    left: 1rem;
    padding: 0.8rem;
    max-width: 250px;
    font-size: 0.8rem;
  }
  
  #cube-info {
    font-size: 0.7rem;
  }
  
  .reset-btn {
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
    margin-top: 0.6rem;
  }
}

/* Touch-specific improvements */
.mobile-device #three-canvas {
  /* Ensure touch events work properly */
  touch-action: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Custom cursor visibility on touch devices */
.mobile-device #custom-cursor {
  /* Make cursor visible during touch interactions */
  transition: opacity 0.1s ease;
}

/* Improve button interaction on mobile */
.mobile-device .reset-btn {
  min-height: 44px; /* iOS recommended touch target size */
  min-width: 44px;
  touch-action: manipulation;
}
